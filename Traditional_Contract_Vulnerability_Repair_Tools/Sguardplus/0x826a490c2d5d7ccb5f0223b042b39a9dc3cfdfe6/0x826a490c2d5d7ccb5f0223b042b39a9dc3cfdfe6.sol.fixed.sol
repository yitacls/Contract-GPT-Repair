pragma solidity ^0.4.25;

                        contract sGuardPlus {
                                constructor() internal {
                                        
                                        
                                }
                                
                                
                                
                                
                        }
                contract DAO  {
function balanceOf (address    addr)   returns (uint    );
function transferFrom (address    from,address    to,uint    balance)   returns (bool    );
uint  public   totalSupply;
}
contract WithdrawDAO  {
DAO  public constant  mainDAO = DAO(0x200450f06520bdd6c527622a273333384d870efb);
address  public constant  trustee = 0xda4a4626d3e16e094de3225a751aab7128e96526;
function withdraw ()   {
uint     balance = mainDAO.balanceOf(msg.sender);
if ( ! mainDAO.transferFrom(msg.sender, this, balance)|| ! msg.sender.send(balance))
throw;
}

function trusteeWithdraw ()   {
bool     __sent_result100 = trustee.send((this.balance+mainDAO.balanceOf(this))-mainDAO.totalSupply());
require(__sent_result100);
}

}
