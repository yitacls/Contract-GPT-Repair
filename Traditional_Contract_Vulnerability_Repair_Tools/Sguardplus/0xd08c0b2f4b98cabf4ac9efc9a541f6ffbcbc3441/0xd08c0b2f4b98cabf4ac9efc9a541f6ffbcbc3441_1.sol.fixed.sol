pragma solidity ^0.4.25;

                        contract sGuardPlus {
                                constructor() internal {
                                        
                                        
                                }
                                function add_uint(uint a, uint b) internal pure returns (uint) {
                                uint c = a + b;
                                assert(c >= a);
                                return c;
                        }
                                
                                
                                
                        }
                contract Coin is sGuardPlus {
address  public   minter;
mapping (address  => uint ) public   balances;
event Sent (address    from,address    to,uint    amount);
constructor ()   {
minter=msg.sender;
balances[msg.sender]=1000;
}

function mint (address    receiver,uint    amount)   {
if (msg.sender!=minter)
return ;

balances[receiver]=add_uint(balances[receiver], amount);
}

function send (address    receiver,uint    amount)   {
if (balances[msg.sender]<amount)
return ;

if (balances[receiver]+amount<balances[receiver])
return ;

balances[msg.sender]-=amount;
balances[receiver]+=amount;
Sent(msg.sender, receiver, amount);
}

}
