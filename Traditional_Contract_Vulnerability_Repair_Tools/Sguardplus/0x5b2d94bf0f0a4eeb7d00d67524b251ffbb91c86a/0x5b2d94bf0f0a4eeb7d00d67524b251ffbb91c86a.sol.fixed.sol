pragma solidity ^0.4.24;

                        contract sGuardPlus {
                                constructor() internal {
                                        
                                        
                                }
                                function add_uint(uint a, uint b) internal pure returns (uint) {
                                uint c = a + b;
                                assert(c >= a);
                                return c;
                        }
                                
                                
                                
                        }
                contract R256 is sGuardPlus {
mapping (uint  => uint ) public   record;
event R (uint    z);
constructor () public  {
}

function addRecord (uint    z) public  {
require(record[z]==0);
record[z]=now;
emit R(z);
}

function addMultipleRecords (uint []   zz) public  {
for(uint     i;i<zz.length; i=add_uint(i, 1)){
addRecord(zz[i]);
}

}

}
