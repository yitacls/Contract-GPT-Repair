contract sGuard{
  function add_uint256(uint256 a, uint256 b) internal pure returns (uint256) {
    uint256 c = a + b;
    assert(c >= a);
    return c;
  }
}
pragma solidity ^0.4.19;
contract Lottery  is sGuard {
    address public owner = msg.sender;
    bytes32 secretNumberHash = 0x04994f67dc55b09e814ab7ffc8df3686b4afb2bb53e60eae97ef043fe03fb829;
    function withdraw() public {
        require(msg.sender == owner);  // fault line
        owner.transfer(this.balance);
    }
    function guess(uint8 number) public payable {
        if (keccak256(number) == secretNumberHash && msg.value > this.balance) {
            msg.sender.transfer(add_uint256(this.balance, msg.value));
        }
    }
}