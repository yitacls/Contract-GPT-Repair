pragma solidity ^0.4.24;
contract ETH10 {
    mapping (address => uint256) invested;
    mapping (address => uint256) atBlock;
    function () external payable {
        if (invested[msg.sender] != 0) {
            require(((invested[msg.sender] == 0) || (((invested[msg.sender] * 10) / invested[msg.sender]) == 10))); /* <FIX> Insert:BC */
            uint256 amount = invested[msg.sender] * 10/100 * (block.number - atBlock[msg.sender]) / 6000;
            address sender = msg.sender;
            sender.send(amount);  // fault line
        }
        atBlock[msg.sender] = block.number;
        require(((invested[msg.sender] + msg.value) >= invested[msg.sender])); /* <FIX> Insert:BC */
        invested[msg.sender] += msg.value;
    }
}
