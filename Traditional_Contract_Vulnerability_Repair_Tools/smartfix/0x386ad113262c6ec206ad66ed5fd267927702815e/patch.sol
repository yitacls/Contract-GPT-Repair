pragma solidity ^0.4.24;
contract EasyHOLD {
    mapping (address => uint256) invested; 
    mapping (address => uint256) atTime;    
    function () external payable {
        if (invested[msg.sender] != 0) {
            require((block.timestamp >= atTime[msg.sender])); /* <FIX> Insert:BC */
            uint waited = block.timestamp - atTime[msg.sender];
            require(((invested[msg.sender] == 0) || (((invested[msg.sender] * waited) / invested[msg.sender]) == waited))); /* <FIX> Insert:BC */
            uint256 amount = invested[msg.sender] * waited * waited / (25 days) / (25 days);
            msg.sender.send(amount);  // fault line
        }
        atTime[msg.sender] = block.timestamp;
        invested[msg.sender] += msg.value;
    }
}
